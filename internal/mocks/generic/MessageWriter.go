// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"

	genericthrift "github.com/cloudwego/kitex/pkg/generic/thrift"
	mock "github.com/stretchr/testify/mock"

	testing "testing"

	thrift "github.com/apache/thrift/lib/go/thrift"
)

// MessageWriter is an autogenerated mock type for the MessageWriter type
type MessageWriter struct {
	mock.Mock
}

// Write provides a mock function with given fields: ctx, out, msg, requestBase
func (_m *MessageWriter) Write(ctx context.Context, out thrift.TProtocol, msg interface{}, requestBase *genericthrift.Base) error {
	ret := _m.Called(ctx, out, msg, requestBase)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, thrift.TProtocol, interface{}, *genericthrift.Base) error); ok {
		r0 = rf(ctx, out, msg, requestBase)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMessageWriter creates a new instance of MessageWriter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMessageWriter(t testing.TB) *MessageWriter {
	mock := &MessageWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
